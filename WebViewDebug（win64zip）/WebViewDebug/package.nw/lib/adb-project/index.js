"use strict";let t=require("../tbs-utils-project"),s=t.platform,n=t.log,i=require("path"),r=require("child_process"),l=r.exec,c=r.spawn,o=s.name,a=i.dirname(process.execPath)+"/tools/adb/"+o+"/adb"+("win"==o?".exe":""),u=i.dirname(process.execPath)+"/tools/adb/"+o+"/reset_adb"+("win"==o?".bat":".sh"),d=process.env;d.PATH=process.env.PATH+";"+i.dirname(process.execPath)+";"+a;const m={host:"127.0.0.1",port:5037,bin:a,env:"win"==o?d:null};let b=require("adbkit"),p=b.createClient(m),h={resetAdb:()=>(n("INFO","client connect resetAdb execPath:"+u),new Promise((e,t)=>{let s="";(s="win"==o?c("cmd.exe",["/S","/C",u]):c("sh",[u])).stdout.on("data",e=>{n("INFO","client connect resetAdb stdout:"+e)}),s.stderr.on("data",e=>{n("INFO","client connect resetAdb stderr:"+e)}),s.on("close",(t,s)=>{n("INFO","client connect resetAdb close:  code("+t+"), signal("+s+")"),e()})})),listDevices:()=>new Promise((t,s)=>{p.listDevices().then(e=>{n("INFO","client listDevices origin: "+JSON.stringify(e));let s=e&&e.filter(e=>"device"==e.type||"offline"==e.type&&"localhost:5037"!==e.id);t(s)},t=>{n("INFO","client listDevices error : "+e.message),s(t)})}),kill:()=>new Promise((e,t)=>{p.kill().then(t=>{n("INFO","client kill success : "+JSON.stringify(t)),e(t)},e=>{n("INFO","client kill error : "+e.message),t(e)})}),usb:e=>new Promise((t,s)=>{p.usb(e).then(e=>{n("INFO","client usb success : "+JSON.stringify(e)),t(e)},e=>{n("INFO","client usb error : "+e.message),s(e)})}),shell:(e,t)=>new Promise((s,n)=>{p.shell(e,t,function(e,t){return e?n(e):s(t)})}),openLogcat:e=>new Promise((t,s)=>{p.openLogcat(e,{clear:!0},function(e,n){return e?s(e):t(n)})}),install:(e,t)=>new Promise((s,i)=>{p.install(e,t,function(e){return n("INFO","client install: "+e),s(e)})}),uninstall:(e,t)=>new Promise((s,i)=>{p.uninstall(e,t,function(e){return n("INFO","client uninstall: "+e),s(e)})})};module.exports=h;